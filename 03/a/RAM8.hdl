// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(sel = address, in = load, a = a, b = b, c = c, d = d, e = e, f = f, g = g, h = h);

    Register(in = in, load = a, out = regOne);
    Register(in = in, load = b, out = regTwo);
    Register(in = in, load = c, out = regThree);
    Register(in = in, load = d, out = regFour);
    Register(in = in, load = e, out = regFive);
    Register(in = in, load = f, out = regSix);
    Register(in = in, load = g, out = regSeven);
    Register(in = in, load = h, out = regEight);

    Mux8Way16(a = regOne, b = regTwo, c = regThree, d = regFour, e = regFive, f = regSix, g = regSeven, h = regEight, sel = address, out = out);
}
